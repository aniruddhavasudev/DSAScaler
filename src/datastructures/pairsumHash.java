package datastructures;

import java.util.HashMap;
import java.util.Map.Entry;

public class pairsumHash {

	public static void main(String[] args) {
		// TODO Auto-generated method stub


		//		A = 8   B = [3, 5, 1, 2, 1, 2]



		int[] B = { 385, 886, 81, 767, 54, 248, 175, 215, 455, 929, 55, 418, 553, 677, 112, 321, 784, 564, 181, 876, 39, 977, 766, 351, 382, 645, 75, 920, 227, 273, 573, 652, 202, 990, 284, 960, 426, 161, 73, 876, 885, 135, 585, 992, 609, 489, 395, 994, 750, 974, 87, 26, 690, 139, 785, 988, 396, 750, 840, 450, 115, 70, 511, 788, 873, 880, 382, 204, 779, 174, 609, 593, 324, 701, 146, 358, 926, 182, 503, 11, 798, 544, 400, 671, 277, 113, 844, 191, 897, 187, 176, 994, 48, 423, 623, 520, 402, 16, 533, 116, 850, 741, 135, 350, 813, 588, 87, 114, 250, 122, 258, 556, 204, 261, 344, 104, 750, 780, 253, 447, 676, 839, 580, 97, 78, 301, 51, 326, 844, 769, 309, 433, 836, 173, 128, 322, 881, 667, 927, 743, 611, 538, 0, 98, 487, 27, 774, 643, 932, 553, 473, 407, 697, 799, 151, 878, 269, 287, 160, 544, 813, 390, 594, 244, 847, 219, 745, 27, 530, 895, 944, 641, 411, 578, 331, 684, 218, 596, 571, 434, 745, 443, 495, 852, 67, 585, 416, 820, 966, 537, 112, 687, 670, 872, 650, 461, 381, 881, 327, 357, 800, 353, 126, 806, 658, 711, 929, 381, 927, 759, 177, 722, 722, 245, 305, 216, 1, 629, 108, 622, 401, 311, 924, 590, 839, 901, 360, 72, 620, 709, 102, 582, 170, 69, 476, 784, 250, 461, 897, 905, 703, 857, 714, 200, 336, 686, 850, 585, 444, 550, 993, 154, 980, 952, 349, 671, 686, 142, 779, 316, 928, 715, 529, 86, 502, 739, 294, 935, 610, 835, 219, 196, 394, 64, 733, 560, 4, 458, 540, 334, 490, 852, 991, 775, 682, 137, 182, 625, 256, 410, 333, 419, 489, 640, 23, 367, 149, 312, 479, 401, 741, 303, 997, 265, 69, 9, 248, 511, 687, 63, 790, 492, 565, 598, 196, 606, 666, 582, 969, 106, 274, 44, 9, 862, 217, 897, 580, 636, 551, 395, 504, 532, 337, 77, 528, 487, 875, 586, 890, 114, 458, 290, 394, 934, 818, 743, 571, 856, 77, 806, 157, 173, 167, 531, 710, 607, 917, 719, 126, 824, 702, 302, 570, 771, 927, 473, 540, 320, 135, 290, 276, 831, 452, 353, 758, 233, 67, 501, 580, 604, 211, 944, 643, 466, 820, 318, 158, 656, 849, 754, 488, 182, 446, 644, 296, 799, 641, 321, 673, 394, 509, 658, 616, 667, 885, 712, 413, 102, 111, 257, 582, 337, 36, 228, 908, 754, 662, 102, 745, 690, 441, 546, 255, 663, 952, 147, 367, 334, 407, 749, 602, 7, 886, 321, 836, 128, 971, 68, 85, 70, 351, 398, 876, 820, 969, 820, 422, 941, 389, 623, 374, 139, 113, 238, 512, 760, 725, 805, 714, 279, 151, 697, 986, 277, 487, 541, 640, 961, 486, 618, 657, 532, 273, 40, 832, 780, 732, 20, 414, 699, 17, 863, 129, 89, 44, 206, 355, 32, 22, 191, 135, 35, 120, 758, 893, 430, 530, 695, 768, 311, 341, 412, 358, 264, 14, 556, 181, 120, 213, 845, 970, 117, 970, 593, 699, 129, 325, 620, 668, 76, 101, 164, 489, 960, 616, 63, 109, 346, 289, 219, 262, 205, 770, 811, 619, 671, 406, 276, 77, 837, 184, 574, 604, 311, 9, 85, 83, 911, 371, 687, 772, 414, 444, 311, 116, 304, 925, 160, 308, 659, 79, 864, 684, 178, 282, 397, 361, 746, 197, 138, 238, 871, 650, 99, 82, 276, 146, 821, 122, 588, 812, 731, 120, 955, 323, 552, 286, 970, 75, 959, 108, 273, 747, 359, 794, 871, 967, 323, 763, 476, 114, 415, 488, 350, 747, 542, 193, 380, 952, 926, 707, 129, 371, 74, 519, 802, 784, 912, 118, 791, 52, 547, 191, 541, 108, 984, 159, 780, 275, 117, 704, 22, 221, 339, 827, 212, 398, 52, 718, 821, 195, 344, 56, 794, 558, 395, 34, 915, 350, 486, 889, 605, 35, 117, 585, 786, 284, 758, 269, 991, 737, 570, 133, 787, 790, 920, 99, 865, 622, 143, 848, 942, 430, 235, 850, 407, 189, 492, 968, 512, 803, 788, 858, 149, 913, 885, 887, 447, 488, 202, 715, 96, 240, 874, 508, 418, 561, 523, 413, 204, 223, 93, 971, 358, 823, 374, 39, 485, 518, 434, 889, 480, 442, 999, 828, 341, 355, 28, 317, 477, 566, 619, 275, 527, 258, 799, 964, 84, 16, 333, 444, 143, 772, 928, 845, 180, 73, 480, 18, 501, 546, 160, 654, 960, 313, 887, 329, 811, 154, 74, 598, 894, 468, 776, 100, 391, 903, 243, 89, 38, 548, 259, 996, 916, 61, 82, 253, 146, 454, 820, 691, 341, 896, 375, 895, 113, 68, 666, 184, 755, 491, 115, 754, 211, 812, 778, 702, 557, 129, 696, 619, 841, 598, 725, 571, 49, 484, 201, 695, 75, 298, 692, 844, 440, 861, 51, 90, 637, 151, 664, 255, 112, 919, 326, 353, 358, 902, 218, 591, 491, 253, 837, 508, 941, 35, 125, 622, 433, 94, 521, 466, 91, 899, 25, 609, 117, 247, 187, 373, 982, 517, 90, 885, 758, 297, 141, 31, 272, 305, 276, 855, 505, 416, 535, 887, 686, 147, 862, 600, 488, 554, 476, 654, 196, 351, 123, 913, 17, 212, 782, 242, 720, 357, 856, 452, 29, 453, 605, 665, 862, 688, 15, 859, 807, 492, 549, 568, 335, 922, 282, 352, 529, 311, 341, 577, 39, 351, 916, 55, 293, 923, 179, 839, 393, 280, 936, 358, 283, 178, 749, 99, 566, 638, 420, 80, 210, 820, 548, 607, 350, 561, 122, 875, 690, 53, 640, 384, 251, 167, 252, 922, 577, 749, 433, 447, 237, 312, 501, 91, 139, 327, 488, 446, 443, 604, 350, 23, 195, 35, 272, 333, 266, 903, 341, 38, 157, 10, 119, 660, 756, 71, 607, 227, 615, 156, 796, 464, 443, 488, 866, 3, 140, 871, 102, 428, 19, 883, 187, 182, 184, 678, 593, 483, 838, 40, 531, 153, 712, 295, 817, 203, 148, 807, 370, 102, 896, 355, 418, 608, 638 };


		int A = 501;
		HashMap<Integer, Integer> hm = new HashMap<>();

		int old = 0;
		int newv = 0;
		for(int i=0; i<B.length; i++) {
			if(hm.get(B[i]) != null) {
				old = hm.get(B[i]);
				newv = old +1;
				hm.put(B[i], newv);
			}
			else {
				hm.put(B[i], 1);
			}}

		System.out.println(hm);
		int old2 = 0;
		int newv2 = 0;
		int count =0;
		for (Entry<Integer, Integer> entry : hm.entrySet()) {
			Integer key = entry.getKey();
			Integer value = entry.getValue();

			if(hm.containsKey(A-key) && hm.get(A-key) > 0 && hm.get(key) > 0) {
				if(key != A-key ) {
					count++;
					old = hm.get(key);
					newv = hm.put(key, old-1);
					old2 = hm.get(A-key);
					newv2 = hm.put(A-key, old2-1);

				}
			}
		}
		System.out.println(count);

	}


}
